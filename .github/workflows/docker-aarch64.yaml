name: docker-aarch64

on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-musl
          override: true

      - name: Configures Binary stripping
        run: |
          mkdir -p .cargo
          echo '[build]' >> .cargo/config.toml
          echo 'rustflags = ["-C", "link-args=-s", "-C", "target-feature=+crt-static"]' >> .cargo/config.toml
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target aarch64-unknown-linux-musl --release

      - name: Copy Binary
        run: |
          mkdir tmp/
          cp Dockerfile tmp/
          cp target/aarch64-unknown-linux-musl/release/farfalle tmp/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/dav1dde/farfalle
          flavor: |
            suffix=-arm64
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
      - name: Build and push server
        uses: docker/build-push-action@v2
        with:
          context: tmp/
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BINARY=farfalle
